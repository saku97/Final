import React, { useState, useEffect } from "react";
import { LoadIcon, Card, Field } from "../Components";
import { logo } from "../assets";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return (
    <h2 className="mt-5 font-bold text-[6449ff] text-xl uppercase">{title}</h2>
  );
};
const Home = () => {
  const [isLoading, setIsLoading] = useState(false);
  const [posts, setPosts] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setIsLoading(true);
      try {
        const response = await fetch("http://localhost:8080/api/v1/post", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });
        if (response.ok) {
          const result = await response.json();
          setPosts(result.data);
        }
      } catch (error) {
        alert(error);
      } finally {
        setIsLoading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = posts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchedResults(searchResults);
      }, 500)
    );
  };
  return (
    <section className="max-w-7xl bg-[rgb(18,21,30)] mx-auto ">
      <div className="flex  flex-col  items-center">
        <img src={logo} alt="logo" className="w-96" />
        <div className="text-[64px] text-zinc-200 font-bold text-center">
          <h1>Create</h1>
          <span className="bg-gradient-to-r from-blue-950 to to-blue-700 bg-clip-text text-transparent pr-4">
            images and paintings
          </span>
          <span>
            with the power of
            <span className="bg-gradient-to-r from-blue-950 to to-blue-700 bg-clip-text text-transparent pl-4">
              IA
            </span>
          </span>
        </div>
        <p className="bg-gradient-to-r from-blue-950 to to-blue-700 bg-clip-text text-transparent font-bold text-[40px]">
          Easily generate images from text.
        </p>
      </div>
      <article className="mt-24">
        <h1 className="font-extrabold text-[#edf4fa] text-center text-[32px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#edf4fa] text-[30px] max-w[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI{" "}
        </p>
      </article>
      <div className="mt-16">
        <Field
          labelname="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChangeField={handleSearchChange}
        />
      </div>
      <div className="mt-10">
        {isLoading ? (
          <div className="flex justify-center items-center">
            <LoadIcon />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#f0f8ff] text-xl mb-3">
                {" "}
                Showing results for{" "}
                <span className="text-[#3f7aaa]"> {searchText}</span>
              </h2>
            )}
            <div
              className="grid lg:grid-cols-4 sm:grid-cols-3 text-[#a9ece7]
xs:grid-cols-2 grid-cols-1 gap-3"
            >
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={posts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};
export default Home;
